# build AG

# add additional source files here
source_files = """
   AG.cpp
"""

# add source file search paths here
CPPPATH = """
   #libsyndicate/
   #build/out/protobufs
"""

# add library paths here
LIBPATH = """
   #build/out/libsyndicate
"""

# add libraries here
LIBS = """
   curl
   pthread
   crypto
   microhttpd
   syndicate
   protobuf
"""

# add additional CPPFLAGS here
CPPFLAGS = ""

# add additional CPPDEFINES here
CPPDEFINES = [
   ("_FILE_OFFSET_BITS", 64),
   "_REENTRANT",
   "_THREAD_SAFE"
]

# get our environment
Import('env')
env = env.Clone()

env.Append(LIBS = Split(LIBS))
env.Append(LIBPATH = Split(LIBPATH))
env.Append(CPPPATH = Split(CPPPATH))
env.Append(CPPFLAGS = Split(CPPFLAGS))
env.Append(CPPDEFINES = CPPDEFINES)
env.Append(LINKFLAGS = ['-Wl,--export-dynamic'])
	
AG = env.Program("AG", source=Split(source_files) )

Return( 'AG' )

"""
   Copyright 2014 The Trustees of Princeton University

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
"""

# add additional source files here
source_files = """
   AG.cpp
   cache.cpp
   core.cpp
   driver.cpp
   events.cpp
   http.cpp
   map-info.cpp
   map-parser-xml.cpp
   publish.cpp
   workqueue.cpp
"""

# add source file search paths here
CPPPATH = """
   #libsyndicate/
   #AG/
   #AG/drivers/common
   #build/out/protobufs
"""

# add library paths here
LIBPATH = """
   #build/out/libsyndicate
"""

# add libraries here
LIBS = """
   curl
   pthread
   crypto
   microhttpd
   syndicate
   protobuf
   rt
   dl
   xerces-c
   m
"""

# add additional CPPFLAGS here
CPPFLAGS = ""

# add additional CPPDEFINES here
CPPDEFINES = [
   ("_FILE_OFFSET_BITS", 64),
   "_REENTRANT",
   "_THREAD_SAFE"
]

# get our environment
Import('env')
env = env.Clone()

env.Append(LIBS = Split(LIBS))
env.Append(LIBPATH = Split(LIBPATH))
env.Append(CPPPATH = Split(CPPPATH))
env.Append(CPPFLAGS = Split(CPPFLAGS))
env.Append(CPPDEFINES = CPPDEFINES)
env.Append(LINKFLAGS = ['-Wl,--export-dynamic'])
	
AG = env.Program("AG", source=Split(source_files) )
AG_watchdog = Glob("syndicate-ag")

Return( 'AG AG_watchdog' )

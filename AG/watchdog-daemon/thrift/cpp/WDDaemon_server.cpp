// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "WDDaemon.h"
#include <protocol/TBinaryProtocol.h>
#include <server/TSimpleServer.h>
#include <transport/TServerSocket.h>
#include <transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::watchdog;

class WDDaemonHandler : virtual public WDDaemonIf {
 public:
  WDDaemonHandler() {
    // Your initialization goes here
  }

  void pulse(const std::set<int32_t> & live_set, const std::set<int32_t> & dead_set) {
    // Your implementation goes here
    printf("pulse\n");
  }

  int32_t register_agd(const  ::watchdog::AGDaemonID& agdid) {
    // Your implementation goes here
    printf("register_agd\n");
  }

};


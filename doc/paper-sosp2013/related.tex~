\section{Related Work}
\label{sec:related}

Network caches are well-studied, common pieces of Internet intrastructure~\cite{cdn-trends,wang99-survey,podlipnig03-survey,raunak99,Androutsellis-Theotokis04,shim99,Wu09}, and many novel techniques for developing scalable cooperative caching systems have been proposed~\cite{sloppy-dht,karger99,cdn-redirect,CARP,Akamai,breslau99}.  Syndicate makes it possible to use unmodified network caches while preserving stronger consistency than they offer, instead of implementing its own caching mechanism.

While client polling, object leases, and server invalidation cache consistency protocols have been proposed~\cite{wcdp,Gwertzman96,Liu97,gray89} and implemented~\cite{memcache,xFS,afs,shark,sprite} to offer stronger wide-area cache consistency, they either require an application-specific cache implementation, or are limited to use-cases where all origin servers run under the same administrative domain (e.g. a cloud or an edge computing platform~\cite{Akamai,PlanetLab}).  Syndicate overcomes both limitations by treating each version of each block of each object as a separate cacheable entity, allowing cache operators to apply whatever usage and eviction policies meet their cost and performance objectives without breaking applications.

Some cloud computing platforms~\cite{riverbed-gateway,amazon-gateway,twinstrata-gateway,ctera} are beginning to deploy cloud storage gateways---edge-hosted processes that transparently host, cache, and replicate data back to a cloud storage provider while keeping it close to edge users.  The key difference between Syndicate and cloud storage gateways today is that Syndicate offers a composable architecture that provides mechanism-agnostic consistency and durability protocols.  Unlike Syndicate, cloud storage gateway designs today are coupled to one or more underlying mechanisms, including caching, replication, deduplication, an encryption, that might instead exist as indepenent subservices for users to transparently compose.

Systems that compose CDNs~\cite{metacdn,cdn.net} have been proposed, as well as systems that compose cloud storage~\cite{metastorage}, with the purpose of improving data access performance, data durability, and hosting costs.  However, they do not address data consistency, which requires cooperation between clients (UGs) and cloud storage (RGs) to implement in a fault-tolerant manner.



QUESTION 1


Hey Jude,

AG's are going to be shared among many volumes, correct? They'll be attached to one data source and any volumes that want to tap them, can, no? Do they push data directly to UG's or to UG's via RG's?

An RG is attached to one volume, but can have many UG's using it, yes? Behind it can be infinite different storage backends (Glacier, ECB, Dropbox, etc).

Let me know if any of this is incorrect.

Thanks!




ANSWER 1

AGs are shared across Volumes, but attached to one data source.  When they get attached to a Volume, they publish all their records into the Volume via the MS such that they are read-only.  Then, a UG sees their data source as a directory hierarchy, and can read data from them (i.e. by contacting the AG for the manifest and blocks).  The UG knows which AG to contact by looking at the base_url field.  When an AG (or a UG) gets detached, the records it owns should disappear from all Volumes.

An RG is potentially be shared across Volumes.  An RG can be marked as "public", meaning that multiple Volumes can use it (and Syndicate users can discover it and add it to their Volumes).  Or, it can be marked as "private", meaning that it can only be bound to a Volume owned by the same user that owns the RG.  Only the UGs in the Volumes to which the RG belongs can upload data to them.  An RG is programmable--it can do literally anything in theory.  In practice, we expect there to be "smart" RGs which do something cool (like move data between clouds based on usage patterns) but don't talk directly to storage, and "dumb" RGs that simply upload and download data to a single cloud storage provider.  For example, there would be a "dumb" RG that talks to ECB, a "dumb" RG that talks to Dropbox, etc, and a "smart" RG that talks to the "dumb" RGs to move data between clouds.

QUESTION 2

Can Volumes attach to multiple AG's? I believe Volumes can have more than one RG. I'm just trying to figure out if it is better to store a list of volumes within AG/RG or store a list of base_urls in Volume for each AG/RG. I'm inclined to believe it makes more sense to store it in volumes. Should AG's have 'owners'?

Since RG's in theory could be talking to Rg's in front of them and behind them (i.e. smart/dumb ones) or can be talking to Amazon and a UG directly (i.e. no smart mediator RG's), what do you think is the best way to represent this?

ANSWER 2	

A Volume can have multiple AGs, and an AG can be bound to multiple Volumes.  AGs must mark files they create with a (unique) owner ID, so they have an owner ID.  I'm crafting a design document that describes Syndicate's consistency model, security model, failure model, and operational behavior, which I will send out separately.  It will capture the relationships between RGs, AGs, UGs, Volumes, and SyndicateUsers more effectively, in context.

As far as constructing a hierarchy of RGs, the RGs at the top should be able to authenticate all of the writer UGs in all Volumes to which they are attached.  The RGs beneath them, however, need only authenticate the RGs above them (if they are not configured to communicate with UGs).  The Volume must be able to represent this hierarchy explicitly, so it knows to give the writer UG credentials to top-level RGs, and credentials for RGs at level i to RGs at level i+1.

When I go to add an RG to my Volume, I must additionally specify how it will be attached (will it be a top-level RG, or will it attach to another RG that is already attached to the Volume).
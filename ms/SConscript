# build ms

import os

Import('env')
env = env.Clone()

# get the protobuf .py file paths
Import('protobuf_py_files')

# get a list of all ms files

# yaml files
ms_files = Glob("*.yaml")

# base files
ms_files.extend( Glob("*.py") )

# django application files
ms_files.extend( Glob("django_home/*.py") )
ms_files.extend( Glob("django_volume/*.py") )
ms_files.extend( Glob("django_accounts/*.py") )
ms_files.extend( Glob("django_syndicate_web/*.py") )
ms_files.extend( Glob('django_rg/*.py') )
ms_files.extend( Glob('django_ag/*.py') )
ms_files.extend( Glob('django_ug/*.py') )

# django templates
ms_files.extend( Glob("django_templates/*") )
ms_files.extend( Glob("django_templates/gateway_templates/*.html"))
ms_files.extend( Glob("django_templates/gumby_templates/*.html"))


# django supplementary/static files
ms_files.extend( Glob("django_static/*") )
ms_files.extend( Glob("django_lib/*") )
ms_files.extend( Glob("django_home/templatetags/*.py"))

# gumby files
ms_files.extend( Glob("django_static/gumby/*") )
ms_files.extend( Glob("django_static/gumby/css/*") )
ms_files.extend( Glob("django_static/gumby/js/*") )
ms_files.extend( Glob("django_static/gumby/js/libs/*") )
ms_files.extend( Glob("django_static/gumby/js/libs/ui/*") )
ms_files.extend( Glob("django_static/gumby/fonts/*") )
ms_files.extend( Glob("django_static/gumby/fonts/icons/*") )
ms_files.extend( Glob("django_static/gumby/img/*") )


# googlepb files
ms_files.extend( Glob("googlepb/*.py") )
ms_files.extend( Glob("googlepb/protobuf/*.py") )
ms_files.extend( Glob("googlepb/protobuf/internal/*.py" ) )
ms_files.extend( Glob("googlepb/protobuf/compiler/*.py" ) )

# protobuf utilities
ms_files.extend( Glob("protobufs/*.py") )

# temporary...
ms_files.extend( Glob("tests/__init__.py") )
ms_files.extend( Glob("tests/setup.py") )
ms_files.extend( Glob("tests/debughandler.py") )

# openid
ms_files.extend( Glob("openid/*.py") )
ms_files.extend( Glob("openid/server/*.py") )
ms_files.extend( Glob("openid/extensions/*.py") )
ms_files.extend( Glob("openid/extensions/draft/*.py") )
ms_files.extend( Glob("openid/store/*.py") )
ms_files.extend( Glob("openid/consumer/*.py") )
ms_files.extend( Glob("openid/yadis/*.py") )

# rpc
ms_files.extend( Glob("rpc/*.py") )

# storage
ms_files.extend( Glob("storage/*.py") )
ms_files.extend( Glob("storage/backends/*.py") )

# MS
ms_files.extend( Glob("MS/*.py") )
ms_files.extend( Glob("MS/methods/*.py") )


cmds = []
for pypb in protobuf_py_files:
   # replace all instances of "google." with "googlepb.", so we can use them in GAE (since there's a conflicting incompatible protobufs package)
   cmd = env.Command( "protobufs/%s" % (os.path.basename(pypb.path)), "#" + pypb.path, "echo '# AUTOMATICALLY GENERATED BY SCons.  DO NOT EDIT' > $TARGET; cat $SOURCE | sed 's/google\./googlepb\./g' >> $TARGET" )
   cmds.append( cmd )

targets = ms_files + cmds

Return( 'targets' )

package md_query;

// filesystem entry
message ms_entry {
   required int32 type = 1;
   required int64 ctime_sec = 2;
   required int64 ctime_nsec = 3;
   required int64 mtime_sec = 4;
   required int32 mtime_nsec = 5;
   required int32 owner = 6;
   required int32 volume = 7;
   required int32 mode = 8;
   required uint64 size = 9;
   required int64 version = 10;
   required string path = 11;
   required string url = 12;
   repeated string replicas = 13;
}

// filesystem update
message ms_update {
   enum UpdateType {
      CREATE = 1;
      UPDATE = 2;
      DELETE = 3;
   }

   required int32 type = 1;
   required ms_entry entry = 2;
}

// metadata information for the entries of a path
message ms_reply {
   required int64 id = 1;
   repeated ms_entry entries_dir = 2;
   repeated ms_entry entries_base = 3;
}

message md_replica_blockinfo {
   enum ProgressType {
      STARTED = 1;
      COMMITTED = 2;
   }
   
   required string fs_path = 10;
   required int64 file_version = 1;
   required uint64 block_id = 2;
   required int64 block_version = 3;
   required uint64 blocking_factor = 4;
   required int64 file_mtime_sec = 5;
   required int32 file_mtime_nsec = 6;
   optional int32 progress = 7;
   optional int64 write_time = 8;
   optional int64 session_id = 9;
}
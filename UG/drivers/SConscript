"""
   Copyright 2014 The Trustees of Princeton University

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
"""

# build UG drivers
import os

# driver files 
driver_files = Glob("*.cpp")

# source search paths
CPPPATH = """
   #build/out/bin/UG/fs/
   #
   #build/out/protobufs/
   /usr/local/include/libsyndicate
"""

# libraries 
LIBS = """
   libsyndicate
   libsyndicateUG
"""

# library search paths
LIBPATH = """
   #build/out/lib/libsyndicate/
"""

# add additional CPPFLAGS here
CPPFLAGS = ""

# add additional CPPDEFINES here
CPPDEFINES = [
   ("_FILE_OFFSET_BITS", 64),
   "_REENTRANT",
   "_THREAD_SAFE"
]

# get our environment
Import('env')
Import("extra_args")

env = env.Clone()
env.Append(LIBPATH = Split(LIBPATH))
env.Append(CPPPATH = Split(CPPPATH))
env.Append(CPPFLAGS = Split(CPPFLAGS))
env.Append(CPPDEFINES = CPPDEFINES)

def create_sobjs(SRCS, path="", this_env=None):
   if this_env is None:
      this_env=env
   return [this_env.SharedObject(path+src) for src in SRCS]

driver_sos = create_sobjs( [x.path for x in Split(driver_files)] )

Return( 'driver_sos' )

